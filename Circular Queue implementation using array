import java.util.*;

public class Main {
    private int[] queue;
    private int front, rear, size, capacity;

    public Main(int capacity) {
        this.capacity = capacity;
        queue = new int[capacity];
        front = 0;
        rear = -1;
        size = 0;
    }

    public boolean isEmpty() {
        return size == 0;
    }

    public boolean isFull() {
        return size == capacity;
    }

    public void disp() {
        if (isEmpty()) {
            System.out.println("Queue is empty");
            return;
        }
        System.out.print("Queue: ");
        for (int i = 0; i < size; i++) {
            System.out.print(queue[(front + i) % capacity] + " ");
        }
        System.out.println();
    }

    public void dequeue() {
        if (isEmpty()) {
            System.out.println("Queue is empty, cannot dequeue");
            return;
        }
        int data = queue[front];
        front = (front + 1) % capacity;
        size--;
        System.out.println(data + " removed from the queue");
    }

    public void enqueue(int data) {
        if (isFull()) {
            System.out.println("Queue is full, cannot enqueue");
            return;
        }
        rear = (rear + 1) % capacity;
        queue[rear] = data;
        size++;
     
    }

    public static void main(String args[]) {
        Main queue = new Main(5); // Set capacity to 5
        queue.enqueue(1);
        queue.enqueue(2);
        queue.enqueue(3);
        queue.enqueue(4);
        queue.enqueue(5);
        System.out.println("Original queue:");
        queue.disp();

        queue.dequeue();
        queue.dequeue();
        System.out.println("Queue after dequeue:");
        queue.disp();
        queue.enqueue(40);
    queue.disp();}
}
